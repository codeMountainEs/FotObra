<?php

namespace App\Filament\Resources;

use App\Filament\Resources\ObraResource\Pages;
use App\Filament\Resources\ObraResource\RelationManagers;
use App\Filament\Resources\ObraResource\Widgets\FotoObrasStatsWidget;
use App\Filament\Resources\ObraResource\Widgets\ObraFotosChart;
use App\Models\Foto;
use App\Models\Obra;
use BladeUI\Icons\Components\Icon;
use Filament\Forms;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Form;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class ObraResource extends Resource
{
    protected static ?string $model = Obra::class;

    protected static ?string $recordTitleAttribute ='nombre';

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function getGloballySearchableAttributes(): array
    {
        return ['nombre','referencia','localidad'];
    }

    public static function getNavigationBadge(): ?string
    {
        return Foto::countTotalImages();
        //return Obra::where('is_active', true)->count();
    }


    public static function form(Form $form): Form
    {
        return $form
            ->schema(Obra::getForm());
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([

                Tables\Columns\TextColumn::make('nombre')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make('localidad')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\IconColumn::make('is_active')
                    ->boolean(),

                Tables\Columns\TextColumn::make('fotos_count')
                    ->label('Número de Imágenes')
                    ->counts('fotos')
                   ,

            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                //Tables\Actions\EditAction::make()->slideOver(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }



    public static function getRelations(): array
    {
        return [
            RelationManagers\FotosRelationManager::class,
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListObras::route('/'),
            'create' => Pages\CreateObra::route('/create'),
            'edit' => Pages\EditObra::route('/{record}/edit'),
            'view' => Pages\ViewObra::route('/{record}'),
        ];
    }

    public static function getWidgets(): array
    {
        return [
            FotoObrasStatsWidget::class,

        ];
    }


    public static function infolist(Infolist $infolist): Infolist
    {
    //dd($infolist);
        //return parent::infolist($infolist); // TODO: Change the autogenerated stub
        return $infolist
                ->schema([
                    Section::make('Datos de la Obra')
                        ->columns(2)
                        ->schema([
                            TextEntry::make('nombre')->columnSpanFull(),
                            TextEntry::make('referencia'),
                            TextEntry::make('localidad'),


                        ]),



                ]);
    }


}
